我在一个Spring boot的项目中实现了自己的WebMvcConfigurer，并重写了自己的configureMessageConverters。如下

```java
public class WebConfig implements WebMvcConfigurer {
      @Override
    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {
        FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();
        FastJsonConfig config = converter.getFastJsonConfig();
        config.setDateFormat("yyyy-MM-dd HH:mm:ss");
        config.setSerializerFeatures(SerializerFeature.PrettyFormat);

        converter.setDefaultCharset(UTF_8);
        List<MediaType> supportedMediaTypes = new ArrayList<>();
        supportedMediaTypes.add(MediaType.APPLICATION_JSON);
        supportedMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);
        converter.setSupportedMediaTypes(supportedMediaTypes);

//        converters.add(new StringHttpMessageConverter());
        converters.add(converter);
    }
}
```

但返回结果中仍然把null都返回了，比如:

```json
{
  "res": null,
  "data": 1
}
```

也就是在对返回结果解析时使用的HttpMessageConverter并不是我定义的`FastJsonHttpMessageConverter`。结合SpringMVC的知识（只关注注解的），参数解析器和结果解析器中的用到的HttpMessageConverter是在RequestMappingHandlerAdapter创建的时候set进去的：

![image-20210526012304756](media/image-20210526012304756.png)

![image-20210526012315005](media/image-20210526012315005.png)

而configureMessageConverters是钩子方法，他的实现是在DelegatingWebMvcConfiguration中的，无论Spring还是Spring boot都是一样的。debug：

![image-20210526012523303](media/image-20210526012523303.png)

可以看到，这时已经有值了，也就是说在在执行WebConfig的configureMessageConverters之前，已经执行了某个WebMvcConfigurer的configureMessageConverters了，这就去看DelegatingWebMvcConfiguration的configureMessageConverters了：

![image-20210526012711448](media/image-20210526012711448.png)

可以看到，我定义的WebMvcConfigurer前面有个WebMvcAutoConfiguration，就是先执行了这个类的configureMessageConverters方法，添加了很多默认的HttpMessageConverter，而这个类中有这样一个注解：

![image-20210526012857804](media/image-20210526012857804.png)

是用来排序的，也就是说，如果想要我定义的在第一位，那只需要添加`@Order(Ordered.HIGHEST_PRECEDENCE)`上这个注解就好了

> @Order的值可以是 < Ordered.HIGHEST_PRECEDENCE+10

也可以修改自己的configureMessageConverters方法，最后代码改成这样`converters.add(0, converter);`修改后：

```java
@Override
public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {
    FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();
    FastJsonConfig config = converter.getFastJsonConfig();
    config.setDateFormat("yyyy-MM-dd HH:mm:ss");
    config.setSerializerFeatures(SerializerFeature.PrettyFormat);

    converter.setDefaultCharset(UTF_8);
    List<MediaType> supportedMediaTypes = new ArrayList<>();
    supportedMediaTypes.add(MediaType.APPLICATION_JSON);
    supportedMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);
    converter.setSupportedMediaTypes(supportedMediaTypes);

    converters.add(0, converter);
}
```



